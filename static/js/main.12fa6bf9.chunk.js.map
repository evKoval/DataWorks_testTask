{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Calendar/DateForm.module.css","components/Calendar/MonthCalendar.module.css","components/Arrays/Arrays.module.css","components/SpiralMatrix/Matrix.module.css","components/Navbar/Navbar.jsx","components/Calendar/MonthCalendar.jsx","components/Calendar/DateForm.jsx","components/Calendar/CalendarContainer.jsx","components/SpiralMatrix/Matrix.jsx","components/SpiralMatrix/MatrixInputForm.jsx","components/SpiralMatrix/SpiralMatrixContainer.jsx","components/BracketsValidator/BracketForm.jsx","components/BracketsValidator/BracketsValidator.jsx","components/Arrays/Arrays.jsx","App.js","serviceWorker.js","index.js","components/BracketsValidator/BracketForm.module.css"],"names":["module","exports","Navbar","className","styles","task","to","activeClassName","active","MonthCalendar","props","date","split","length","day","month","year","selectedDate","Date","weekDay","getDay","daysInMonth","getTime","weeks","Math","ceil","table","tr","weekDays","k","i","j","push","key","selectedDay","calendarItem","calendarTable","toLocaleString","getFullYear","DateForm","useForm","mode","reValidateMode","defaultValues","handleSubmit","register","errors","onSubmit","data","refreshDate","name","ref","required","pattern","value","message","type","errorMessage","CalendarContainer","newDate","setState","state","this","Component","Matrix","matrix","width","height","currentMaxJ","currentMaxI","currentMinJ","currentMinI","totalCount","spiralMatrix","map","cell","style","backgroundColor","color","MatrixInputForm","setNewDimensions","min","max","SpiralMatrixContainer","newWidth","newHeight","BracketForm","arr","customOpen","customClose","setPhrase","phrase","setValidators","expression","phraseInput","validators","id","placeholder","defaultChecked","for","maxLength","customBlock","customInput","BracketsValidator","newPhrase","newValidators","stringToValidate","args","error","bracketPairs","bracesStack","flat","forEach","elem","bracketMatch","openingBrackets","Array","from","Object","values","regexp","RegExp","Infinity","join","exec","includes","index","keys","splice","validateBrackets","resultStr","result","slice","charAt","Arrays","useState","arrLength","setArrLength","summM","setM","summN","setN","Sn","setSn","setArrays","arrayLength","M","N","L","m","mArray","nArray","floor","fillArrays","onChange","ev","currentTarget","minLength","validate","lessThanSummMN","reduce","a","b","checkNumberOfTwo","filter","num","App","path","render","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.12fa6bf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__1gqfr\",\"task\":\"Navbar_task__3znSe\",\"active\":\"Navbar_active__11KWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"DateForm_errorMessage__O-fyE\",\"DateForm\":\"DateForm_DateForm__3STT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedDay\":\"MonthCalendar_selectedDay__1CBAk\",\"day\":\"MonthCalendar_day__38f3T\",\"calendarItem\":\"MonthCalendar_calendarItem__2in4g\",\"calendarTable\":\"MonthCalendar_calendarTable__2HJvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"Arrays_errorMessage__PeADx\",\"Arrays\":\"Arrays_Arrays__3qOk4\",\"Sn\":\"Arrays_Sn__DTYJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Matrix_cell__1-gCf\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className={styles.Navbar}>\r\n      <div className={styles.task}>\r\n        <NavLink to=\"/calendar\" activeClassName={styles.active} >\r\n          Calendar\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.task}>\r\n        <NavLink to=\"/spiralMatrix\" activeClassName={styles.active} >\r\n          Spiral matrix\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.task}>\r\n        <NavLink activeClassName={styles.active} to=\"/brackets_validator\">\r\n          Brackets validation\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.task}>\r\n        <NavLink activeClassName={styles.active} to=\"/summ_arrays\">\r\n          2 Arrays\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styles from \"./MonthCalendar.module.css\";\r\n\r\nconst MonthCalendar = props => {\r\n  let [day, month, year] =\r\n    props.date.split(\".\").length > 2\r\n      ? props.date.split(\".\")\r\n      : props.date.split(\"-\").length > 2\r\n      ? props.date.split(\"-\")\r\n      : props.date.split(\"/\");\r\n\r\n  const selectedDate = new Date(year, month - 1, 1);\r\n  let weekDay = selectedDate.getDay();\r\n  weekDay = weekDay ? weekDay : (weekDay += 7);\r\n  const daysInMonth = (new Date(year, month).getTime() - selectedDate.getTime()) / (1000 * 3600 * 24);\r\n  const days = 7;\r\n  const weeks = Math.ceil((weekDay - 1 + daysInMonth) / 7) + 1;\r\n\r\n  let table = [],\r\n    tr = [];\r\n  const weekDays = [\"Mon.\", \"Tue.\", \"Wed.\", \"Thu.\", \"Fri.\", \"Sat.\", \"Sun.\"];\r\n  let k = 1;\r\n  for (let i = 0; i < weeks; i++) {\r\n    tr = [];\r\n    for (let j = 0; j < days; j++) {\r\n      if (i === 0) {\r\n        tr.push(<th key={i + j} className={styles.day}>{weekDays[j]}</th>);\r\n      } else if ((j >= weekDay - 1 || i > 1) && k <= daysInMonth) {\r\n        tr.push(\r\n          <td key={i + j} className={(k === +day ? styles.selectedDay : null) + \" \" + styles.calendarItem}>\r\n            {k}\r\n          </td>\r\n        );\r\n        k++;\r\n      } else {\r\n        tr.push(<td key={i + j} className={styles.calendarItem}></td>);\r\n      }\r\n    }\r\n    table.push(<tr key={i}>{tr}</tr>);\r\n  }\r\n\r\n  return (\r\n    <table className={styles.calendarTable}>\r\n      <caption>{selectedDate.toLocaleString(\"en\", { month: \"long\" }) + \" \" + selectedDate.getFullYear()}</caption>\r\n      <tbody>{table}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default MonthCalendar;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styles from \"./DateForm.module.css\";\r\n\r\nconst DateForm = props => {\r\n  const { handleSubmit, register, errors } = useForm({\r\n    mode: \"onBlur\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: { ...props }\r\n  });\r\n\r\n  const onSubmit = data => {\r\n    props.refreshDate(data.date);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.DateForm} onSubmit={handleSubmit(onSubmit)}>\r\n      <input\r\n        name=\"date\"\r\n        ref={register({\r\n          required: \"Date is required\",\r\n          pattern: {\r\n            value: /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[13-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/i,\r\n            message: \"!Invalid date! Date format must be dd.mm.yyyy\"\r\n          }\r\n        })}\r\n      />\r\n      <button type=\"submit\">Submit</button>\r\n      <div className={styles.errorMessage}> {errors.date && errors.date.message}</div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DateForm;\r\n","import React, { Component } from \"react\";\r\nimport MonthCalendar from \"./MonthCalendar\";\r\nimport DateForm from \"./DateForm\";\r\n\r\nexport default class CalendarContainer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      date: \"10.03.2020\"\r\n    };\r\n  }\r\n\r\n  refreshDate = newDate => {\r\n    this.setState({ date: newDate });\r\n  };\r\n\r\n  render() {\r\n    const { date } = this.state;\r\n    return (\r\n      <div>\r\n        <MonthCalendar date={date} />\r\n        <DateForm date={date} refreshDate={this.refreshDate} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Matrix.module.css\";\r\n\r\nconst Matrix = props => {\r\n  const spiralMatrix = (width, height) => {\r\n    let matrix = [];\r\n    let currentMaxJ = width;\r\n    let currentMaxI = height;\r\n    let currentMinJ = 0;\r\n    let currentMinI = 0;\r\n    const totalCount = width * height;\r\n    let k = 1;\r\n\r\n    for (let i = 0; i < height; i++) {\r\n      matrix[i] = [];\r\n    }\r\n    while (k <= width * height) {\r\n      let i = currentMinI;\r\n      let j = currentMinJ;\r\n\r\n      //go right\r\n      for (j; j < currentMaxJ; j++) {\r\n        matrix[i][j] = k++;\r\n      }\r\n      i++;\r\n      j--;\r\n      currentMinI++;\r\n\r\n      if (k > totalCount) {\r\n        break;\r\n      }\r\n\r\n      //go down\r\n      for (i; i < currentMaxI; i++) {\r\n        matrix[i][j] = k++;\r\n      }\r\n      if (k > totalCount) {\r\n        break;\r\n      }\r\n      i--;\r\n      j--;\r\n      currentMaxJ--;\r\n\r\n      //go left\r\n      for (j; j > currentMinJ; j--) {\r\n        matrix[i][j] = k++;\r\n      }\r\n      if (k > totalCount) {\r\n        break;\r\n      }\r\n      currentMaxI--;\r\n\r\n      //go up\r\n      for (i; i >= currentMinI; i--) {\r\n        matrix[i][j] = k++;\r\n      }\r\n\r\n      currentMinJ++;\r\n    }\r\n    return matrix;\r\n  };\r\n\r\n  let matrix = spiralMatrix(props.width, props.height);\r\n  for (let i = 0; i < matrix.length; i++) {\r\n    matrix[i] = (\r\n      <tr key={i}>\r\n        {matrix[i].map(cell => (\r\n          <td\r\n            className={styles.cell}\r\n            key={cell}\r\n            style={{\r\n              backgroundColor: `RGBA(0, 0, 0, ${cell / (props.width * props.height)})`,\r\n              color: `RGBA(0, ${(255 * cell) / (props.width * props.height)}, 0, ${1 -\r\n                (cell * 0.4) / (props.width * props.height)} )`\r\n            }}>\r\n            {cell}\r\n          </td>\r\n        ))}\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <caption>{props.width + \"x\" + props.height}</caption>\r\n        <tbody>{matrix}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Matrix;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styles from \"../Calendar/DateForm.module.css\";\r\n\r\nconst MatrixInputForm = props => {\r\n  const { handleSubmit, register, errors } = useForm({\r\n    mode: \"onBlur\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: { ...props }\r\n  });\r\n\r\n  const onSubmit = data => {\r\n    props.setNewDimensions(data.width, data.height);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input\r\n        name=\"width\"\r\n        type=\"number\"\r\n        min=\"1\"\r\n        max=\"100\"\r\n        ref={register({\r\n          required: \"height is required\",\r\n        })}\r\n      />\r\n      <input\r\n        name=\"height\"\r\n        type=\"number\"\r\n        min=\"1\"\r\n        max=\"100\"\r\n        ref={register({\r\n          required: \"height is required\",\r\n        })}\r\n      />\r\n      <button type=\"submit\">Submit</button>\r\n      {errors.width && <div className={styles.errorMessage}>{errors.width.message}</div>}\r\n      {errors.height && <div className={styles.errorMessage}>{errors.height.message}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MatrixInputForm;\r\n","import React, { Component } from \"react\";\r\nimport Matrix from \"./Matrix\";\r\nimport MatrixInputForm from \"./MatrixInputForm\"\r\n\r\nexport default class SpiralMatrixContainer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      width: 20,\r\n      height: 20\r\n    };\r\n  }\r\n\r\n  setNewDimensions = (newWidth, newHeight) => {\r\n    this.setState({ width: newWidth,\r\n        height: newHeight \r\n     });\r\n  };\r\n\r\n  render() {\r\n      const {width, height} = this.state;\r\n    return <div>\r\n        <MatrixInputForm  width={width} height={height} setNewDimensions={this.setNewDimensions}/>\r\n        <Matrix width={width} height={height}/>\r\n    </div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styles from \"./BracketForm.module.css\";\r\n\r\nconst BracketForm = props => {\r\n  const { handleSubmit, register, errors } = useForm({\r\n    mode: \"onBlur\",\r\n    reValidateMode: \"onChange\",\r\n    defaultValues: { ...props }\r\n  });\r\n\r\n  const onSubmit = data => {\r\n    let arr = [];\r\n    if (data[\"()\"]) arr.push([\"(\", \")\"]);\r\n    if (data[\"squareBrackets\"]) arr.push([\"[\", \"]\"]);\r\n    if (data[\"{}\"]) arr.push([\"{\", \"}\"]);\r\n    if (data.customOpen && data.customClose) arr.push([`${data.customOpen}`, `${data.customClose}`]);\r\n    props.setPhrase(data.phrase);\r\n    props.setValidators(arr);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.BracketForm}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={styles.expression}>\r\n          <input\r\n            className={styles.phraseInput}\r\n            type=\"text\"\r\n            name=\"phrase\"\r\n            ref={register({\r\n              required: \"phrase is required\"\r\n            })}\r\n          />\r\n          Phrase to check\r\n          {errors.phrase && <div className={styles.errorMessage}>{errors.phrase.message}</div>}\r\n        </div>\r\n        <div className={styles.validators}>\r\n          <div>\r\n            <input id=\"()\" type=\"checkbox\" placeholder=\"( )\" name=\"()\" defaultChecked=\"true\" ref={register} />\r\n            <label >( ) </label>\r\n          </div>\r\n          <div>\r\n            <input id=\"[]\" type=\"checkbox\" placeholder=\"[ ]\" name=\"squareBrackets\" ref={register} />\r\n            <label for=\"[]\">[ ]</label>\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              id=\"{}\"\r\n              type=\"checkbox\"\r\n              placeholder=\"{ }\"\r\n              name=\"{}\"\r\n              ref={register({\r\n                maxLength: 1\r\n              })}\r\n            />\r\n            <label for=\"{}\">{\"{ }\"}</label>\r\n          </div>\r\n          <div>\r\n            <div className={styles.customBlock}>\r\n              <input\r\n                className={styles.customInput}\r\n                type=\"text\"\r\n                placeholder=\"customOpen\"\r\n                name=\"customOpen\"\r\n                ref={register({\r\n                    maxLength: 1\r\n                  })}\r\n              />\r\n\r\n              <input\r\n                className={styles.customInput}\r\n                type=\"text\"\r\n                placeholder=\"customClose\"\r\n                name=\"customClose\"\r\n                ref={register({\r\n                  maxLength: 1\r\n                })}\r\n              />\r\n\r\n              <button type=\"submit\">validate</button>\r\n            </div>\r\n          {(errors.customOpen||errors.customClose) && <div className={styles.errorMessage}>Only 1 symbol, please</div>}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BracketForm;\r\n","import React, { Component } from \"react\";\r\nimport BracketForm from \"./BracketForm\";\r\nimport styles from \"./BracketForm.module.css\";\r\n\r\nconst validateBrackets = (stringToValidate, ...args) => {\r\n  let bracketPairs = {};\r\n  let bracesStack = [];\r\n  let error;\r\n\r\n  args = args.flat();\r\n\r\n  //create obj for matching closing braces to opening ones\r\n  args.forEach(elem => {\r\n    bracketPairs[elem[1]] = elem[0];\r\n  });\r\n\r\n  // create array of opening braces\r\n  const openingBrackets = Array.from(Object.values(bracketPairs));\r\n\r\n  //create RegExp from args !!!\"\\\\\" added to screen symbols \"()[]{}\", should\r\n  //iteratively add alements from args checking if symbol or remove \"\\\\\"( bad for \"[]\")\r\n  const regexp = new RegExp(`[\\\\${args.flat(Infinity).join(\"\\\\\")}]`, \"g\");\r\n\r\n  let bracketMatch;\r\n\r\n  while ((bracketMatch = regexp.exec(stringToValidate))) {\r\n    //   debugger;\r\n    // adding opening brace to stack\r\n    if (openingBrackets.includes(bracketMatch[0])) {\r\n      bracesStack = [...bracesStack, { [bracketMatch[0]]: bracketMatch.index }];\r\n    }\r\n    //delete last opening bracket in stack if it matches current closing bracket\r\n    else if (\r\n      bracesStack.length &&\r\n      bracketPairs[bracketMatch[0]] === Object.keys(bracesStack[bracesStack.length - 1])[0]\r\n    ) {\r\n      bracesStack.splice(-1, 1);\r\n    }\r\n    //error if last opening bracket in stack doesn't match current closing bracket\r\n    else {\r\n      error = `${bracketMatch.index}`;\r\n      break;\r\n    }\r\n  }\r\n\r\n  let message = error\r\n    ? `error: unmatching brace ${bracketMatch[0]} at position ${bracketMatch.index}`\r\n    : !!bracesStack.length\r\n    ? `unmatching brace ${Object.keys(bracesStack[bracesStack.length - 1])[0]} at position ${\r\n        Object.values(bracesStack[bracesStack.length - 1])[0]\r\n      }`\r\n    : \"correct bracket expression!!\";\r\n  error = error\r\n    ? bracketMatch.index\r\n    : !!bracesStack.length\r\n    ? Object.values(bracesStack[bracesStack.length - 1])[0]\r\n    : null;\r\n  return [message, error];\r\n};\r\n\r\nexport default class BracketsValidator extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      phrase: \"(1+2*[3-4]/{5+6})\",\r\n      validators: [[\"(\", \")\"]]\r\n    };\r\n  }\r\n\r\n  setPhrase = newPhrase => {\r\n    this.setState({ phrase: newPhrase });\r\n  };\r\n  setValidators = newValidators => {\r\n    this.setState({ validators: newValidators });\r\n  };\r\n  render() {\r\n    let { phrase, validators } = this.state;\r\n    const [resultStr, index = null] = validateBrackets(phrase, validators);\r\n    const className = index === 0 || !!index ? \"errorMessage\" : \"\";\r\n    return (\r\n      <div>\r\n        <BracketForm phrase={phrase} setPhrase={this.setPhrase} setValidators={this.setValidators} />\r\n        {\r\n          <div className={styles.result}>\r\n            {phrase.slice(0, index)}\r\n            <span className={styles[className]}>{phrase.charAt(index)}</span>\r\n            {phrase.slice(+index + 1)}\r\n          </div>\r\n        }\r\n        <div className={styles.result + \" \" + styles[className]}>{resultStr}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styles from \"./Arrays.module.css\";\r\n\r\nconst fillArrays = (L, M, Sn) => {\r\n  let m = 0,\r\n    i = 0;\r\n  let mArray = [],\r\n    nArray = [];\r\n  Sn = Sn.split(\"\");\r\n  while (m < M) {\r\n    [mArray[i], nArray[i]] = [Math.ceil(Sn[i] / 2), Math.floor(Sn[i] / 2)];\r\n    Sn[i] && m++;\r\n    i++;\r\n  }\r\n  for (i; i < L; i++) {\r\n    [nArray[i], mArray[i]] = [Math.ceil(Sn[i] / 2), Math.floor(Sn[i] / 2)];\r\n  }\r\n  return [mArray.join(\"\"), nArray.join(\"\")];\r\n};\r\n\r\nconst Arrays = () => {\r\n  const [arrLength, setArrLength] = useState(20);\r\n  const [summM, setM] = useState(15);\r\n  const [summN, setN] = useState(15);\r\n  const [Sn, setSn] = useState(\"22221121112121212121\");\r\n  const [Arrays, setArrays] = useState([]);\r\n\r\n  const { register, handleSubmit, errors } = useForm({defaultValues: { arrayLength:20, M:15, N:15, Sn:\"22221121112121212121\"  }});\r\n\r\n  const onSubmit = data => {\r\n    setArrays(fillArrays(arrLength, summM, Sn));\r\n  };\r\n\r\n  const onLengthChange = ev => {\r\n    setArrLength(ev.currentTarget.value);\r\n  };\r\n  const onMChange = ev => {\r\n    setM(ev.currentTarget.value);\r\n  };\r\n  const onNChange = ev => {\r\n    setN(ev.currentTarget.value);\r\n  };\r\n  const onSnChange = ev => {\r\n    setSn(ev.currentTarget.value);\r\n  };\r\n  return (\r\n    <div className={styles.Arrays}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"arrayLength\"\r\n          name=\"arrayLength\"\r\n          onChange={onLengthChange}\r\n          max=\"1000\"\r\n          min=\"1\"\r\n          ref={register({\r\n            required: \"length of arrays L is required\"\r\n          })}\r\n        />\r\n\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"M\"\r\n          name=\"M\"\r\n          onChange={onMChange}\r\n          ref={register({\r\n            required: \"summ of elements in 1st array is required\",\r\n            max: { value: arrLength, message: `M must be less than length of array L=${arrLength}` }\r\n          })}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"N\"\r\n          name=\"N\"\r\n          onChange={onNChange}\r\n          ref={register({\r\n            required: \"summ of elements in 2nd array is required\",\r\n            max: { value: arrLength, message: `N must be less than length of array L=${arrLength}` }\r\n          })}\r\n        />\r\n        <div className={styles.Sn}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Sn\"\r\n            name=\"Sn\"\r\n            onChange={onSnChange}\r\n            ref={register({\r\n              required: true,\r\n              max: 123,\r\n              maxLength: {\r\n                value: arrLength,\r\n                message: `Length must be equal to L=${arrLength}, currently ${Sn.length}`\r\n              },\r\n              minLength: {\r\n                value: arrLength,\r\n                message: `Length must be equal to L=${arrLength}, currently ${Sn.length}`\r\n              },\r\n              pattern: { value: /^[0-2]+$/i, message: `Only '0', '1', '2' values possible` },\r\n              validate: {\r\n                lessThanSummMN: value =>\r\n                  value.split(\"\").reduce((a, b) => +a + +b, 0) === +summM + +summN ||\r\n                  `Summ must be equal to M+N = ${+summM + +summN}`,\r\n                checkNumberOfTwo: value =>\r\n                  value.split(\"\").filter(num => num == 2).length <= Math.min(summM, summN) ||\r\n                  `Quantity of \"2\" must be less than ${ Math.min(summM, summN)}`\r\n              }\r\n            })}\r\n          />\r\n        </div>\r\n\r\n        <div className={styles.errorMessage}>\r\n          {(errors.Sn && errors.Sn.message) ||\r\n            (errors.arrayLength && errors.arrayLength.message) ||\r\n            (errors.M && errors.M.message) ||\r\n            (errors.N && errors.N.message)}\r\n        </div>\r\n        <div>{Arrays[0]}</div>\r\n        <div>{Arrays[1]}</div>\r\n        <input type=\"submit\" value=\"Generate\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arrays;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport CalendarContainer from \"./components/Calendar/CalendarContainer\";\nimport SpiralMatrixContainer from \"./components/SpiralMatrix/SpiralMatrixContainer\";\nimport BracketsValidator from \"./components/BracketsValidator/BracketsValidator\";\nimport Arrays from \"./components/Arrays/Arrays\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      date: \"05.03.2020\"\n    };\n  }\n\n  refreshDate = newDate => {\n    this.setState({ date: newDate });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path=\"/calendar\" render={() => <CalendarContainer/>} />\n            <Route path=\"/spiralMatrix\" render={() => <SpiralMatrixContainer/>} />\n            <Route path=\"/brackets_validator\" render={() => <BracketsValidator/>} />\n            <Route path=\"/summ_arrays\" render={() => <Arrays/>} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"validators\":\"BracketForm_validators__gNORS\",\"customBlock\":\"BracketForm_customBlock__FiCuM\",\"customInput\":\"BracketForm_customInput__3VmIP\",\"phraseInput\":\"BracketForm_phraseInput__1dUxF\",\"BracketForm\":\"BracketForm_BracketForm__23ZRw\",\"result\":\"BracketForm_result__1Vc8W\",\"errorMessage\":\"BracketForm_errorMessage__21hpL\"};"],"sourceRoot":""}